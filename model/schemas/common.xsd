<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2014 (http://www.altova.com) by Joe Pych (Bionic Advertising Services) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" elementFormDefault="qualified" attributeFormDefault="unqualified" vc:minVersion="1.1">
	<xs:include schemaLocation="currencyCode.xsd"/>
	<xs:include schemaLocation="mediaType.xsd"/>
	<xs:complexType name="Person">
		<xs:annotation>
			<xs:documentation>data type representing a person</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="firstName"/>
			<xs:element name="lastName"/>
			<xs:element name="photo" type="File" minOccurs="0"/>
			<xs:element name="jobTitle" minOccurs="0"/>
			<xs:element name="company">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="name"/>
						<xs:element name="id" type="xs:IDREF"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="email" type="EmailAddress"/>
			<xs:element name="workPhone" type="PhoneNumber" minOccurs="0"/>
			<xs:element name="mobilePhone" type="PhoneNumber" minOccurs="0"/>
			<xs:element name="faxNumber" type="PhoneNumber" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID"/>
	</xs:complexType>
	<xs:complexType name="Company">
		<xs:annotation>
			<xs:documentation>data type representing a company</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="logo" type="File" minOccurs="0"/>
			<xs:element name="address" type="PostalAddress" minOccurs="0"/>
			<xs:element name="phone" type="PhoneNumber"/>
			<xs:element name="fax" type="PhoneNumber" minOccurs="0"/>
			<xs:element name="url" type="xs:anyURI"/>
			<xs:element name="parentCompany" type="xs:IDREF" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:ID"/>
	</xs:complexType>
	<xs:complexType name="Transactor">
		<xs:annotation>
			<xs:documentation>data type for representing a party in a transaction including company and contacts</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="company" type="Company"/>
			<xs:element name="mainContact" type="Person"/>
			<xs:element name="billingContact" type="Person"/>
			<xs:element name="otherContacts" minOccurs="0">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="contact" type="Person"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="EmailAddress">
		<xs:annotation>
			<xs:documentation>This is the data type for email addresses. The pattern is a regular expression that validates the email address.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="^([0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})$"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PhoneNumber">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:complexType name="PostalAddress">
		<xs:annotation>
			<xs:documentation>data type for expressing a postal address</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="streetAddress">
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element name="streetLine"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="city"/>
			<xs:element name="state"/>
			<xs:element name="country"/>
			<xs:element name="postalCode"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Money">
		<xs:annotation>
			<xs:documentation>data type for expressing money</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:decimal">
				<xs:attribute name="currencyCode" type="CurrencyCode" default="USD"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="Rate">
		<xs:annotation>
			<xs:documentation>data type for expressing rates</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="amount" type="Money"/>
			<xs:element name="costMethod" type="CostMethod"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="CostMethod">
		<xs:annotation>
			<xs:documentation>data type representing costing methods e.g. CPM, CPA, CPC, etc.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="CPM"/>
			<xs:enumeration value="CPC"/>
			<xs:enumeration value="CPA"/>
			<xs:enumeration value="Sponsorship"/>
			<xs:enumeration value="RevenueShare"/>
			<xs:enumeration value="CostPlusCPC"/>
			<xs:enumeration value="CostPlusCPA"/>
			<xs:enumeration value="CostPlusRevenueShare"/>
			<xs:enumeration value="PercentOfPayout"/>
			<xs:enumeration value="FlatFee"/>
			<xs:enumeration value="Makegood"/>
			<xs:enumeration value="ValueAdd"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="TimeSpan">
		<xs:annotation>
			<xs:documentation>data type for a time span range from start DateTime to end DateTime</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="start" type="xs:dateTime"/>
			<xs:element name="end" type="xs:dateTime"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="System">
		<xs:annotation>
			<xs:documentation>data type that represents a computer system</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name"/>
			<xs:element name="vendor" type="Company"/>
			<xs:element name="url" type="xs:anyURI" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Dimension">
		<xs:annotation>
			<xs:documentation>data type representing length and width</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="width">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:decimal">
							<xs:attribute name="unitOfLength" type="UnitOfLength" default="pixels"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="height">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:decimal">
							<xs:attribute name="unitOfLength" type="UnitOfLength" default="pixels"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="UnitOfLength">
		<xs:restriction base="xs:string">
			<xs:enumeration value="pixels"/>
			<xs:enumeration value="inches"/>
			<xs:enumeration value="centimeters"/>
			<xs:enumeration value="millimeters"/>
			<xs:enumeration value="feet"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="AdTag">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="tagType" type="TagType"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="TagType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Standard">
				<xs:annotation>
					<xs:documentation>Only able to serve static images (no flash)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Iframe/Javascript">
				<xs:annotation>
					<xs:documentation>The most commonly used tag type. It can serve both static and flash creative units.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Internal Redirect">
				<xs:annotation>
					<xs:documentation>Only used to serve DFA ads on sites that also use the Doubleclick for Publishers platform. These tags are considered the most efficient to traffic and typically result in very few discrepancies.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="JavaScript/Standard">
				<xs:annotation>
					<xs:documentation>Can deliver both static and rich media creative units. Useful for complex sites and/or sites that do not wish to use iFrames</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Click Tracker">
				<xs:annotation>
					<xs:documentation>Used only to record clicks. Used on text links, links in emails or other elements on a website.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="File">
		<xs:sequence>
			<xs:element name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the file</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:annotation>
					<xs:documentation>Either a link to the file or the file itself.</xs:documentation>
				</xs:annotation>
				<xs:element name="url" type="xs:anyURI">
					<xs:annotation>
						<xs:documentation>Link to the file.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="binary" type="xs:base64Binary">
					<xs:annotation>
						<xs:documentation>The binary file itself</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="mediaType" type="MediaType"/>
	</xs:complexType>
</xs:schema>
