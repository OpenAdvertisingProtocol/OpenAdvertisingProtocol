<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2014 (http://www.altova.com) by Joe Pych (Bionic Advertising Services) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" elementFormDefault="qualified" attributeFormDefault="unqualified" vc:minVersion="1.1">
	<xs:include schemaLocation="currencyCode.xsd"/>
	<xs:include schemaLocation="mediaType.xsd"/>
	<xs:complexType name="Person">
		<xs:annotation>
			<xs:documentation>data type representing a person</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="Name">
				<xs:annotation>
					<xs:documentation>This is the name of the person "Jane Doe" or of the function "Accounts Receivable"</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="firstName" minOccurs="0"/>
			<xs:element name="lastName" minOccurs="0"/>
			<xs:element name="photo" type="File" minOccurs="0"/>
			<xs:element name="jobTitle" minOccurs="0"/>
			<xs:element name="company">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="name" type="Name"/>
						<xs:element name="id" type="Identifier" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="email" type="EmailAddress"/>
			<xs:element name="address" type="PostalAddress" minOccurs="0"/>
			<xs:element name="workPhone" type="PhoneNumber" minOccurs="0"/>
			<xs:element name="mobilePhone" type="PhoneNumber" minOccurs="0"/>
			<xs:element name="faxNumber" type="PhoneNumber" minOccurs="0"/>
			<xs:element name="identifiers" type="Identifier" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Company">
		<xs:annotation>
			<xs:documentation>data type representing a company</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="Name"/>
			<xs:element name="logo" type="File" minOccurs="0"/>
			<xs:element name="address" type="PostalAddress" minOccurs="0"/>
			<xs:element name="phone" type="PhoneNumber"/>
			<xs:element name="fax" type="PhoneNumber" minOccurs="0"/>
			<xs:element name="url" type="xs:anyURI"/>
			<xs:element name="parentCompany" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="name" type="Name"/>
						<xs:element name="id" type="Identifier" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="identifiers" type="Identifier" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Transactor">
		<xs:annotation>
			<xs:documentation>data type for representing a party in a transaction including company and contacts</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="company" type="Company"/>
			<xs:element name="mainContact" type="Person"/>
			<xs:element name="billingContact" type="Person"/>
			<xs:element name="otherContacts" minOccurs="0">
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="contact" type="Person"/>
						<xs:element name="role">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:maxLength value="25"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="EmailAddress">
		<xs:annotation>
			<xs:documentation>This is the data type for email addresses. The pattern is a regular expression that validates the email address.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="^([0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})$"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PhoneNumber">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:complexType name="PostalAddress">
		<xs:annotation>
			<xs:documentation>data type for expressing a postal address</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="streetAddress">
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element name="streetLine"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="city"/>
			<xs:element name="state"/>
			<xs:element name="country"/>
			<xs:element name="postalCode"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Money">
		<xs:annotation>
			<xs:documentation>data type for expressing money</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:decimal">
				<xs:attribute name="currencyCode" type="CurrencyCode" default="USD"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="Rate">
		<xs:annotation>
			<xs:documentation>data type for expressing rates</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="amount" type="Money"/>
			<xs:element name="costMethod" type="CostMethod"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="CostMethod">
		<xs:annotation>
			<xs:documentation>data type representing costing methods e.g. CPM, CPA, CPC, etc.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="CPM"/>
			<xs:enumeration value="CPC"/>
			<xs:enumeration value="CPA"/>
			<xs:enumeration value="Flat rate - impressions"/>
			<xs:enumeration value="Flat rate - clicks"/>
			<xs:enumeration value="Makegood"/>
			<xs:enumeration value="ValueAdd"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="TimeSpan">
		<xs:annotation>
			<xs:documentation>data type for a time span range from start DateTime to end DateTime</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="start" type="xs:dateTime"/>
			<xs:element name="end" type="xs:dateTime"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="System">
		<xs:annotation>
			<xs:documentation>data type that represents a computer system</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="Name"/>
			<xs:element name="vendor" type="Company"/>
			<xs:element name="url" type="xs:anyURI" minOccurs="0"/>
			<xs:element name="identifier" type="Identifier" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Dimension">
		<xs:annotation>
			<xs:documentation>data type representing length and width</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="width">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:decimal">
							<xs:attribute name="unitOfLength" type="UnitOfLength" default="pixels"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="height">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:decimal">
							<xs:attribute name="unitOfLength" type="UnitOfLength" default="pixels"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="UnitOfLength">
		<xs:restriction base="xs:string">
			<xs:enumeration value="pixels"/>
			<xs:enumeration value="inches"/>
			<xs:enumeration value="centimeters"/>
			<xs:enumeration value="millimeters"/>
			<xs:enumeration value="feet"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="AdUnit">
		<xs:sequence>
			<xs:element name="name"/>
			<xs:element name="isIABStandard" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates whether or not this is an IAB Standard Ad Unit</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="initialDimensions"/>
			<xs:element name="maxExpandedDimensions" minOccurs="0"/>
			<xs:element name="maxInitialFileLoadSize">
				<xs:annotation>
					<xs:documentation>The maximum size of the creative file.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="supportedMediaTypes" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="mediaType" type="MediaType" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="Channel">
		<xs:annotation>
			<xs:documentation>the type of channel</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="email"/>
			<xs:enumeration value="onlineDisplay"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="AdTag">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="tagType" type="TagType"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="TagType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Standard">
				<xs:annotation>
					<xs:documentation>Only able to serve static images (no flash)</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Iframe/Javascript">
				<xs:annotation>
					<xs:documentation>The most commonly used tag type. It can serve both static and flash creative units.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Internal Redirect">
				<xs:annotation>
					<xs:documentation>Only used to serve DFA ads on sites that also use the Doubleclick for Publishers platform. These tags are considered the most efficient to traffic and typically result in very few discrepancies.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="JavaScript/Standard">
				<xs:annotation>
					<xs:documentation>Can deliver both static and rich media creative units. Useful for complex sites and/or sites that do not wish to use iFrames</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Click Tracker">
				<xs:annotation>
					<xs:documentation>Used only to record clicks. Used on text links, links in emails or other elements on a website.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="File">
		<xs:annotation>
			<xs:documentation>data type representing a file</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="Name">
				<xs:annotation>
					<xs:documentation>The name of the file</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:annotation>
					<xs:documentation>Either a link to the file or the file itself.</xs:documentation>
				</xs:annotation>
				<xs:element name="url" type="xs:anyURI">
					<xs:annotation>
						<xs:documentation>Link to the file.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="binary" type="xs:base64Binary">
					<xs:annotation>
						<xs:documentation>The binary file itself</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="mediaType" type="MediaType"/>
	</xs:complexType>
	<xs:simpleType name="Note">
		<xs:annotation>
			<xs:documentation>data type representing a note. Should be implemented as a CLOB field in the database.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:whiteSpace value="preserve"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Name">
		<xs:annotation>
			<xs:documentation>data type representing the name of an item</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:maxLength value="80"/>
			<xs:minLength value="1"/>
			<xs:whiteSpace value="collapse"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="Quantity">
		<xs:annotation>
			<xs:documentation>Expresses a quantity of something - impressions, clicks, views, etc.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:long">
				<xs:attribute name="unitOfMeasurement" type="UnitOfMeasurement"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="UnitOfMeasurement">
		<xs:annotation>
			<xs:documentation>Enumeration of standard unit types used in the industry.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Impressions"/>
			<xs:enumeration value="Clicks"/>
			<xs:enumeration value="Actions"/>
			<xs:enumeration value="Uniques"/>
			<xs:enumeration value="ShareOfVoice"/>
			<xs:enumeration value="Downloads"/>
			<xs:enumeration value="Emails"/>
			<xs:enumeration value="Leads"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Percentage">
		<xs:annotation>
			<xs:documentation>A percentage represented as a decimal value betwee 0 and 100 inclusive.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:decimal">
			<xs:minInclusive value="0"/>
			<xs:maxInclusive value="100"/>
			<xs:totalDigits value="5"/>
			<xs:fractionDigits value="2"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DocumentSource">
		<xs:annotation>
			<xs:documentation>data type representing the source of a document</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="person" type="Person"/>
			<xs:element name="company" type="Company" minOccurs="0"/>
			<xs:element name="system" type="System" minOccurs="0"/>
			<xs:element name="timestamp" type="xs:dateTime"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Identifier">
		<xs:annotation>
			<xs:documentation>data type for identifier (or "id") of objects</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="idOwner" type="Name">
					<xs:annotation>
						<xs:documentation>the entity that originates and "owns" this identifier. E.g. "Acme Corp."</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="LegalTerms">
		<xs:annotation>
			<xs:documentation>data type representing the legal terms of a transaction</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="iabStandardTerms">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:boolean">
							<xs:attribute name="version" type="xs:decimal" default="3.0"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="outClause" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If not present, there is no out clause.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="isOutClause" type="xs:boolean">
							<xs:annotation>
								<xs:documentation>True if there is an out clause. False otherwise.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="numberOfDays" type="xs:short">
							<xs:annotation>
								<xs:documentation>Number of days notice required on a cancellation.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="notes" type="Note" minOccurs="0"/>
			<xs:element name="attachment" type="File" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FinancialTerms">
		<xs:annotation>
			<xs:documentation>data type representing the financial terms of a transaction</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="paymentTerms" type="PaymentTerms"/>
			<xs:element name="billingFrequency" default="monthly">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="weekly"/>
						<xs:enumeration value="monthly"/>
						<xs:enumeration value="quarterly"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="systemOfRecord" default="advertiser">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="advertiser"/>
						<xs:enumeration value="publisher"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="agencyCommission" type="Discount" minOccurs="0"/>
			<xs:element name="discount" type="Discount" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="notes" type="Note" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="PaymentTerms">
		<xs:annotation>
			<xs:documentation>Payment terms for an order (e.g. Net30)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Advance"/>
			<xs:enumeration value="Net15"/>
			<xs:enumeration value="Net30"/>
			<xs:enumeration value="Net60"/>
			<xs:enumeration value="EndOfContract"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="Discount">
		<xs:annotation>
			<xs:documentation>A discounting structure. Allows for specifying either a monetary discount or a percentage discount.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Description" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of the discount.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="Percent" type="Percentage">
					<xs:annotation>
						<xs:documentation>A percentage represented as a decimal value betwee 0 and 100 inclusive.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Amount" type="Money">
					<xs:annotation>
						<xs:documentation>Monetary amount of the discount.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AudienceProfile">
		<xs:annotation>
			<xs:documentation>data type representing an audience profile</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="Name"/>
			<xs:element name="source" type="DocumentSource"/>
			<xs:element name="id" type="Identifier" maxOccurs="unbounded"/>
			<xs:element name="universe" type="Quantity" maxOccurs="unbounded"/>
			<xs:element name="distribution" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>a snapshot distribution such as education broken down by degree level achieved.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="name" type="Name">
							<xs:annotation>
								<xs:documentation>The name of the dimension. E.g. "Education"</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="value" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Each dimension can have many values.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="name" type="Name">
										<xs:annotation>
											<xs:documentation>The name of the value E.g. "College Graduate"</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="percent" type="Percentage" minOccurs="0">
										<xs:annotation>
											<xs:documentation>The percentage of the universe represented by this value.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="index" type="IndexedValue" minOccurs="0"/>
									<xs:element name="quantity" type="Quantity" minOccurs="0" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="summaryStatistic" type="SummaryStatistic" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>a snapshot summary statistic such as average age.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="trend" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>a view of a statistic over time such as monthly unique visitors in the trailing twelve months summarized by month.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="name" type="Name">
							<xs:annotation>
								<xs:documentation>The name of the statistic in the trend. E.g. monthly unique visitors.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="granularity">
							<xs:annotation>
								<xs:documentation>The granularity of the trend. E.g. monthly.</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="hourly"/>
									<xs:enumeration value="daily"/>
									<xs:enumeration value="weekly"/>
									<xs:enumeration value="monthly"/>
									<xs:enumeration value="quarterly"/>
									<xs:enumeration value="annually"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:element>
						<xs:element name="dataPoint">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="timePeriod" type="TimeSpan"/>
									<xs:element name="summaryStatistic" type="SummaryStatistic"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="IndexedValue">
		<xs:annotation>
			<xs:documentation>data type representing a quantity compared against a baseline value expressed as 100 times the ratio to the base value. I.e. an index of 100 means the quanity equals the baseline.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	<xs:complexType name="SummaryStatistic">
		<xs:annotation>
			<xs:documentation>data type representing a summary statistic such as an average</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="Name">
				<xs:annotation>
					<xs:documentation>The name of the statistic being summarized. E.g. Age</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="aggregationType">
				<xs:annotation>
					<xs:documentation>The way the statistic is being summarized. E.g. Average.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Average"/>
						<xs:enumeration value="Minimum"/>
						<xs:enumeration value="Maximum"/>
						<xs:enumeration value="Median"/>
						<xs:enumeration value="Mode"/>
						<xs:enumeration value="Sum"/>
						<xs:enumeration value="Count"/>
						<xs:enumeration value="First"/>
						<xs:enumeration value="Last"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:choice>
				<xs:element name="money" type="Money"/>
				<xs:element name="percentage" type="Percentage"/>
				<xs:element name="quantity" type="Quantity"/>
				<xs:element name="number" type="xs:decimal"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
